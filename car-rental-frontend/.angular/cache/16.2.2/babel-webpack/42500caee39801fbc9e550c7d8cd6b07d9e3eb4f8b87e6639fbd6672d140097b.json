{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"../../services/customer.service\";\nimport * as i4 from \"../../services/findex.service\";\nimport * as i5 from \"../../services/local-storage.service\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"ngx-toastr\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  var _class;\n  class LoginComponent {\n    constructor(formBuilder, authService, customerService, findexService, localStorageService, router, toastrService) {\n      this.formBuilder = formBuilder;\n      this.authService = authService;\n      this.customerService = customerService;\n      this.findexService = findexService;\n      this.localStorageService = localStorageService;\n      this.router = router;\n      this.toastrService = toastrService;\n    }\n    ngOnInit() {\n      this.createLoginForm();\n    }\n    // tslint:disable-next-line:typedef\n    createLoginForm() {\n      this.loginForm = this.formBuilder.group({\n        email: ['', Validators.required],\n        password: ['', Validators.required]\n      });\n    }\n    // tslint:disable-next-line:typedef\n    login() {\n      if (this.loginForm.valid) {\n        const loginModel = Object.assign({}, this.loginForm.value);\n        this.authService.login(loginModel).subscribe(response => {\n          this.localStorageService.setToken(response.data.token);\n          this.findexService.customerFindexScore = this.findexService.getFindexScoreForCustomer();\n          console.log('Kullanıcı findeks puanı: ' + this.findexService.customerFindexScore);\n          this.toastrService.success('Giriş Başarılı');\n          this.router.navigate(['cars']).then(r => {\n            this.getCustomerByMail(loginModel.email);\n          });\n        }, error => {\n          this.toastrService.error(error.error);\n        });\n      }\n    }\n    // tslint:disable-next-line:typedef\n    getCustomerByMail(email) {\n      this.customerService.getCustomerByMail(email).subscribe(response => {\n        this.customerService.setCurrentUser(response.data);\n        this.localStorageService.setUser(response.data.firstName + ' ' + response.data.lastName);\n      });\n    }\n  }\n  _class = LoginComponent;\n  _class.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.CustomerService), i0.ɵɵdirectiveInject(i4.FindexService), i0.ɵɵdirectiveInject(i5.LocalStorageService), i0.ɵɵdirectiveInject(i6.Router), i0.ɵɵdirectiveInject(i7.ToastrService));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-login\"]],\n    decls: 21,\n    vars: 1,\n    consts: [[1, \"text-center\"], [1, \"form-signin\"], [3, \"formGroup\"], [1, \"h3\", \"mb-3\", \"fw-normal\"], [1, \"form-floating\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Email\", 1, \"form-control\"], [\"for\", \"email\"], [\"type\", \"password\", \"id\", \"floatingPassword\", \"placeholder\", \"Parola\", \"formControlName\", \"password\", 1, \"form-control\"], [\"for\", \"floatingPassword\"], [1, \"checkbox\", \"mb-3\"], [\"type\", \"checkbox\", \"value\", \"remember-me\"], [1, \"w-100\", \"btn\", \"btn-lg\", \"btn-primary\", 3, \"click\"], [\"routerLink\", \"/register\", 1, \"mt-5\", \"mb-3\", \"text-muted\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"body\", 0)(1, \"main\", 1)(2, \"form\", 2)(3, \"h1\", 3);\n        i0.ɵɵtext(4, \"L\\u00FCtfen giri\\u015F yap\\u0131n\\u0131z.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelement(6, \"input\", 5);\n        i0.ɵɵelementStart(7, \"label\", 6);\n        i0.ɵɵtext(8, \"Email\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 4);\n        i0.ɵɵelement(10, \"input\", 7);\n        i0.ɵɵelementStart(11, \"label\", 8);\n        i0.ɵɵtext(12, \"Parola\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 9)(14, \"label\");\n        i0.ɵɵelement(15, \"input\", 10);\n        i0.ɵɵtext(16, \" Beni Hat\\u0131rla \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_17_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(18, \"Giri\\u015F Yap\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"p\", 12);\n        i0.ɵɵtext(20, \"Hala kay\\u0131t olmad\\u0131n m\\u0131?\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      }\n    },\n    dependencies: [i6.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"html[_ngcontent-%COMP%], body[_ngcontent-%COMP%]{height:100%}body[_ngcontent-%COMP%]{display:flex;align-items:center;padding-top:40px;padding-bottom:40px;background-color:#fff}.form-signin[_ngcontent-%COMP%]{width:100%;max-width:330px;padding:15px;margin:auto}.form-signin[_ngcontent-%COMP%]   .checkbox[_ngcontent-%COMP%]{font-weight:400}.form-signin[_ngcontent-%COMP%]   .form-floating[_ngcontent-%COMP%]:focus-within{z-index:2}.form-signin[_ngcontent-%COMP%]   input[type=email][_ngcontent-%COMP%]{margin-bottom:-1px;border-bottom-right-radius:0;border-bottom-left-radius:0}.form-signin[_ngcontent-%COMP%]   input[type=password][_ngcontent-%COMP%]{margin-bottom:10px;border-top-left-radius:0;border-top-right-radius:0}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}